{
  "openapi": "3.1.0",
  "info": {
    "title": "Hyper Metrics API v3",
    "version": "1.0",
    "contact": {
      "name": "Hyper Team",
      "url": "https://hyper.ag",
      "email": "admin@hyper.ag"
    },
    "description": "Provides access to metrics stored in the Hyper data platform.",
    "summary": "Query metric values from Hyper.ag",
    "license": {
      "name": "MIT",
      "identifier": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/site/{site}/analytics/v3/device_metrics": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "site",
          "in": "path",
          "required": true,
          "description": "The site identifier."
        }
      ],
      "get": {
        "summary": "Get metric series.",
        "tags": [],
        "operationId": "get-site-site_id-metrics-v3-devices-metric_slug-start_ts---end_ts",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "start_time",
            "required": true,
            "description": "The start time of the metrics timeseries."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "end_time",
            "required": true,
            "description": "The end time of the metrics timeseries."
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "ids",
            "description": "The list of Hyper device identifiers to include in the response."
          },
          {
            "schema": {
              "type": "array",
              "example": "aranet_temperature"
            },
            "in": "query",
            "name": "metrics",
            "description": "The list of metric identifiers to include in the response."
          },
          {
            "schema": {
              "type": "array",
              "enum": [
                "min",
                "max",
                "avg",
                "sum",
                "latest"
              ]
            },
            "in": "query",
            "name": "statistics",
            "description": "The list of deriving statistics to compute for the selected interval."
          },
          {
            "schema": {
              "type": "string",
              "pattern": "[0-9]+(m|h|d)"
            },
            "in": "query",
            "name": "resolution",
            "description": "The time resolution of the data (e.g. 5s, 15m, 5h, 30d)."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "metadata",
            "description": "Determines if the metadata for the metrics and devices should be included."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "nan",
                "null"
              ]
            },
            "in": "query",
            "name": "missing",
            "description": "Determines how missing values are represented."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "format",
            "description": "The format of the response data."
          }
        ],
        "description": "This endpoint can be used to obtain pre-aggregated metric values for a list of devices for a given time interval.",
        "responses": {
          "200": {
            "description": "Returns a JSON object containing the metric series, time labels and metadata for metrics and devices. Each series object is annotated with the metric and device it belongs too. The interval will contain JSON `null` values when the data is missing for any metric and device combination.\n\nIn addition to computing the metrics over time, aggregated statistics for the entire time interval can be computed. The supported satistics are: average, minimum, maximum and sum.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "metrics": {
                          "type": "object",
                          "properties": {
                            "$metric": {
                              "$ref": "#/components/schemas/MetricsMetadata"
                            }
                          }
                        },
                        "devices": {
                          "type": "object",
                          "properties": {
                            "$device_id": {
                              "$ref": "#/components/schemas/DeviceMetadata"
                            }
                          }
                        }
                      }
                    },
                    "labels": {
                      "type": "array",
                      "example": "1970-01-01T00:00:00Z",
                      "items": {
                        "type": "string"
                      }
                    },
                    "series": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Series"
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "avg": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StatisticValue"
                          }
                        },
                        "min": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StatisticValueWithTime"
                          }
                        },
                        "max": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StatisticValueWithTime"
                          }
                        },
                        "sum": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StatisticValue"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "labels",
                    "series"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "metadata": {
                        "metrics": {
                          "$metric": {
                            "quantity": "Temperature",
                            "unit": "Degrees Celsius",
                            "symbol": "C"
                          }
                        },
                        "devices": {
                          "$device_id": {
                            "name": "string",
                            "original_id": "string"
                          }
                        }
                      },
                      "labels": "1970-01-01T00:00:00Z",
                      "series": [
                        {
                          "metric": "string",
                          "device_id": "string",
                          "values": "string"
                        }
                      ],
                      "statistics": {
                        "avg": [
                          {
                            "metric": "string",
                            "device_id": "string",
                            "value": 0
                          }
                        ],
                        "min": [
                          {
                            "metric": "string",
                            "device_id": "string",
                            "value": [
                              "1970-01-01T00:00:00Z",
                              0
                            ]
                          }
                        ],
                        "max": [
                          {
                            "metric": "string",
                            "device_id": "string",
                            "value": [
                              "1970-01-01T00:00:00Z",
                              0
                            ]
                          }
                        ],
                        "sum": [
                          {
                            "metric": "string",
                            "device_id": "string",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MetricsMetadata": {
        "title": "MetricsMetadata",
        "x-stoplight": {
          "id": "ubdpsuup86n7d"
        },
        "type": "object",
        "examples": [
          {
            "quantity": "Temperature",
            "unit": "Degrees Celsius",
            "symbol": "C"
          }
        ],
        "properties": {
          "quantity": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "DeviceMetadata": {
        "title": "DeviceMetadata",
        "x-stoplight": {
          "id": "g5mwbbsowalpp"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "original_id": {
            "type": "string"
          }
        }
      },
      "Series": {
        "title": "Series",
        "x-stoplight": {
          "id": "ek08f6m2ye3ns"
        },
        "type": "object",
        "properties": {
          "metric": {
            "type": "string"
          },
          "device_id": {
            "type": "string",
            "pattern": "([a-z0-9]:){3}"
          },
          "values": {
            "type": [
              "string",
              "array"
            ],
            "items": {
              "type": "number"
            }
          }
        }
      },
      "StatisticValue": {
        "title": "SingleValueStatistic",
        "x-stoplight": {
          "id": "caqflegf89ko7"
        },
        "type": "object",
        "properties": {
          "metric": {
            "type": "string"
          },
          "device_id": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "StatisticValueWithTime": {
        "title": "SingleValueStatistic",
        "x-stoplight": {
          "id": "caqflegf89ko7"
        },
        "type": "object",
        "properties": {
          "metric": {
            "type": "string"
          },
          "device_id": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number",
                  "properties": {}
                }
              ]
            }
          }
        },
        "examples": [
          {
            "metric": "string",
            "device_id": "string",
            "value": [
              "1970-01-01T00:00:00Z",
              0
            ]
          }
        ]
      }
    }
  }
}
